################################################################################
# Fichier de test des routes HTTP de l'API
# Nécessite l'extension REST Client pour VSCode
# https://marketplace.visualstudio.com/items?itemName=humao.rest-client
################################################################################
@endpoint = http://localhost:{{$dotenv PORT}}/graphql

### Se connecter
# @name signin
POST {{ endpoint }}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  signin(email: "babar@github.io", password: "babarpass"){
    username
    token {
      token
      expiresIn
    }
  }
}

 ###
 @authToken = {{signin.response.body.data.signin.token.token}}

### Requête de test
# En graphQL on utilise toujours la méthode POST
# C'est dans le body que l'on fournit la requête graphQL
POST {{ endpoint }}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  getAllCategories {
    id
    label
    movies {
      id
      title
    }
  }
}

### Récupération d'un film via son identifiant
POST {{ endpoint }}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  getMovie(id: 1){
    title
    description
    imdb {
      Poster
      Title
      Ratings {
        Value
      }
    }
  }
}

### Inscription
POST {{ endpoint }}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

mutation {
  signup(username: "Babar", email: "babar@github.io", password: "babarpass") {
    id
    username
    email
  }
}

### Ajouter un nouveau film
POST {{ endpoint }}
Content-Type: application/json
Authorization: Bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation CreateMovie($input: MovieInput!) {
  createMovie(input: $input) {
    id
    title
  }
}

{
  "input": {
    "title": "The Godfather",
    "description": "The aging patriarch of an organized crime dynasty transfers control of his clandestine empire to his reluctant son.",
    "release_year": 1972,
    "image": "https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJmNWYtYzZlODY3ZTk3OTFlXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SY1000_CR0,0,704,1000_AL_.jpg",
    "imdb_id": "tt0068646"
  }
}

### Ajouter une nouvelle critique
POST {{ endpoint }}
Content-Type: application/json
Authorization: Bearer {{authToken}}
X-REQUEST-TYPE: GraphQL

mutation CreateReview($input: ReviewInput!){
  createReview(input: $input){
    id
    rating
    content
  }
}

{
  "input": {
    "movie_id": 1,
    "rating": 3,
    "content": "Test de critique"
  }
}

### Recherche de film sur Omdb
POST {{ endpoint }}
Content-Type: application/json
X-REQUEST-TYPE: GraphQL

query {
  searchImdb(searchTerm: "star wars"){
    Title
    Year
  }
}
